pipeline{

    agent any

    parameters{

        choice(name: 'action', choices: 'apply\ndelete', description: 'apply or delete the application files on eks cluster')
        string(name: 'cluster', defaultValue: 'demo-cluster', description: 'Choose EKS Cluster Name')
        string(name: 'region', defaultValue: 'us-east-1', description: 'choose AWS region of cluster')

    }
    environment{

        ACCESS_KEY =  credentials('ACCESS_KEY')
        SECRET_KEY =  credentials('SECRET_KEY')

    }
    stages{

        stage('git checkout'){

            steps{

                script{

                    checkout scmGit(branches: [[name: '*/main']], extengitsions: [], userRemoteConfigs: [[url: 'https://github.com/purna16/CICD-Pipeline.git']])

                }

            }
        }
        stage('connect with cluster'){

            steps{

                script{

                    sh """
                    aws configure set aws_access_key_id "$ACCESS_KEY"
                    aws configure set aws_secret_access_key "$SECRET_KEY"
                    aws configure set region "${params.region}"
                    aws eks --region ${params.region} update-kubeconfig --name ${params.cluster}

                    """
                }
            }

        }
        stage('Deployment on eks cluster'){

            when{ expression { params.action == 'apply'} }
            steps{

                script{

                    def apply = false

                    try{
                     input message: 'please confirm apply to intiatiate the deployment', ok: 'ready to deploy the config'
                     apply = true 
                     }catch(err){
                     apply = false
                     currentBuild.result = 'UNSTABLE' 
                    }
                    if(apply){
                     sh """
                        kubectl apply -f .
                     """   
                    }


                }
            }
        }
    }
}